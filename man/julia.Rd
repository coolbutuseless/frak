% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/julia.R
\name{julia}
\alias{julia}
\title{Generate a Julia Set}
\usage{
julia(
  c_re = -0.7,
  c_im = 0.27015,
  x = 0,
  y = 0,
  zoom = 1,
  width = 400,
  height = 400,
  max_iter = 255,
  result = "int"
)
}
\arguments{
\item{c_re, c_im}{real and imaginary components of 'c'. Default [-0.7, 0.27015]}

\item{x, y}{offsets in centre position Default [0, 0]}

\item{zoom}{zoom level. default 1.}

\item{width, height}{size of the output image default: 400x400}

\item{max_iter}{maximum number of iterations. Default: 255}

\item{result}{'int', 'dbl', 'nativeraster' (or 'nara').
\describe{
  \item{\code{'int'}}{The integer matrix returned is a record of the raw counts}
  \item{\code{'dbl'}}{The iteraction counts are normalised to be in the range [0, 1]}
  \item{\code{'nativeraster'}}{The matrix is returned as a native raster with the 
  colors specified in the \code{colors} argument (not yet implemented)}
}}
}
\value{
raw vector with dimensions (size, size)
}
\description{
This function generates a fractal image - the value at each location 
represents the number of iterations performed before the function
evaluation tends towards infinity.
}
\examples{
im <- julia(result = 'int', height = 200, zoom = 4, x = 0.2)
plot(as.raster(im/max(im)))
}
